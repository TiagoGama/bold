{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/components/IconLibrary.tsx","webpack:///./src/pages/design-guidelines/iconography/library.mdx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","IconLibrary","classes","useStyles","createStyles","useState","filter","setFilter","icons","matchSorter","Object","keys","IconMap","className","searchWrapper","icon","placeholder","value","onChange","e","target","wrap","map","key","style","cell","iconBox","wordWrap","theme","width","display","alignItems","justifyContent","background","pallete","surface","padding","height","margin","border","divider","textAlign","fontSize","typography","sizes","text","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","TabLinks","items","title","href","isMDXComponent","intl","useIntl","isActive","item","location","pathname","locale","tabs","component","LocaleLink","to","active","marginTop","marginBottom","boxShadow"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,iOCATC,EAAc,WAAM,IACvBC,EAAYC,aAAUC,GAAtBF,QADuB,EAEHG,mBAAS,IAA9BC,EAFwB,KAEhBC,EAFgB,KAYzBC,EAAQC,YAAYC,OAAOC,KAAKC,KAAUN,GAEhD,OACE,kBAAC,IAAD,KACE,yBAAKO,UAAWX,EAAQY,eACtB,kBAAC,IAAD,CAAWC,KAAK,cAAcC,YAAY,kBAAkBC,MAAOX,EAAQY,SAbtD,SAACC,GACtBA,GAAKA,EAAEC,QAAUD,EAAEC,OAAOH,MAC5BV,EAAUY,EAAEC,OAAOH,OAEnBV,EAAU,QAYV,kBAAC,IAAD,CAAMc,MAAI,GACPb,EAAMc,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAMA,IAAKA,EAAKC,MAAOtB,EAAQuB,MAC7B,yBAAKZ,UAAWX,EAAQwB,SACtB,kBAAC,IAAD,CAAMX,KAAMQ,KAEd,kBAAC,IAAD,CAAMC,MAAO,CAAEG,SAAU,eAAiBJ,UAQhDnB,EAAe,SAACwB,GAAD,MAAmB,CACtCd,cAAe,CACbe,MAAO,KAETH,QAAS,CACPI,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,WAAYL,EAAMM,QAAQC,QAAQF,WAClCG,QAAS,OACTC,OAAQ,GACRR,MAAO,GACPS,OAAQ,qBACRC,OAAQ,aAAaX,EAAMM,QAAQM,SAErCf,KAAM,CACJI,MAAO,IACPY,UAAW,SACXC,SAAUd,EAAMe,WAAWC,MAAMC,Q,YCjDxBC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAMA,YAACC,EAAA,EAAD,CAAUC,MAAO,CAAC,CAChBC,MAAO,QACPC,KAAM,kCACL,CACDD,MAAO,UACPC,KAAM,2CACJJ,QAAQ,aACZ,YAAC,EAAD,CAAaA,QAAQ,iBAKzBH,EAAWQ,gBAAiB,G,kCC7C5B,+FAaaJ,EAAW,SAACF,GAAyB,IACxCG,EAAUH,EAAVG,MACArD,EAAYC,aAAUC,GAAtBF,QAEFyD,EAAOC,oBACPC,EAAW,SAACC,GAAD,MACK,oBAAbC,WACNA,SAASC,WAAaF,EAAKL,MAAQM,SAASC,WAAT,IAA0BL,EAAKM,OAASH,EAAKL,OAEnF,OACE,yBAAK5C,UAAWX,EAAQgE,MACtB,kBAAC,IAAD,KACGX,EAAMjC,KAAI,SAAAwC,GAAI,OACb,kBAAC,IAAD,CAASvC,IAAKuC,EAAKL,KAAMU,UAAWC,IAAYC,GAAIP,EAAKL,KAAMjC,MAAOtB,EAAQ4D,KAAMQ,OAAQT,EAASC,IAClGA,EAAKN,aAQZpD,EAAe,SAACwB,GAAD,MAAmB,CACtCsC,KAAM,CACJK,UAAW,sBACXC,aAAc,QAEhBV,KAAM,CACJ,UAAW,CACTW,UAAW","file":"component---src-pages-design-guidelines-iconography-library-mdx-27bdabb3940afdf8e61f.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import { Cell, Grid, Icon, Text, TextInput, Theme, useStyles, VFlow } from 'bold-ui'\nimport { IconMap } from 'bold-ui/components/Icon/generated/types'\nimport matchSorter from 'match-sorter'\nimport React, { useState } from 'react'\n\nexport const IconLibrary = () => {\n  const { classes } = useStyles(createStyles)\n  const [filter, setFilter] = useState('')\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e && e.target && e.target.value) {\n      setFilter(e.target.value)\n    } else {\n      setFilter('')\n    }\n  }\n\n  const icons = matchSorter(Object.keys(IconMap), filter)\n\n  return (\n    <VFlow>\n      <div className={classes.searchWrapper}>\n        <TextInput icon='zoomOutline' placeholder='Search icons...' value={filter} onChange={handleSearchChange} />\n      </div>\n\n      <Grid wrap>\n        {icons.map((key: any) => (\n          <Cell key={key} style={classes.cell}>\n            <div className={classes.iconBox}>\n              <Icon icon={key} />\n            </div>\n            <Text style={{ wordWrap: 'break-word' }}>{key}</Text>\n          </Cell>\n        ))}\n      </Grid>\n    </VFlow>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  searchWrapper: {\n    width: 320,\n  },\n  iconBox: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: theme.pallete.surface.background,\n    padding: '1rem',\n    height: 80,\n    width: 80,\n    margin: '0 auto 0.5rem auto',\n    border: `1px solid ${theme.pallete.divider}`,\n  } as React.CSSProperties,\n  cell: {\n    width: 100,\n    textAlign: 'center',\n    fontSize: theme.typography.sizes.text,\n  } as React.CSSProperties,\n})\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lucas/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { IconLibrary } from '../../../components/IconLibrary';\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"iconography\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Iconography`}</h1>\n    <TabLinks items={[{\n      title: 'Usage',\n      href: '/design-guidelines/iconography'\n    }, {\n      title: 'Library',\n      href: '/design-guidelines/iconography/library'\n    }]} mdxType=\"TabLinks\" />\n    <IconLibrary mdxType=\"IconLibrary\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/ButtonLink.tsx","webpack:///./src/pages/index.tsx"],"names":["ButtonLink","props","localized","rest","component","to","LocaleLink","GatsbyLink","defaultProps","AnimatedTitle","shine","keyframes","backgroundPosition","classes","useStyles","createStyles","style","animatedTitle","intl","useIntl","container","className","wrapper","title","display","divider","vSpacing","subtitle","formatMessage","id","kind","skin","size","textDecoration","icon","marginRight","wrap","xs","md","alignItems","hSpacing","fill","infoTitle","info","theme","flex","flexDirection","padding","maxWidth","breakpoints","down","fontWeight","fontSize","lineHeight","background","backgroundClip","textFillColor","WebkitTextFillColor","WebkitBackgroundClip","backgroundSize","animation","width","marginBottom","marginTop","marginLeft"],"mappings":"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","file":"component---src-pages-index-tsx-0943403b2164ccf92ca0.js","sourcesContent":["import { Button, ButtonProps } from 'bold-ui'\nimport GatsbyLink from 'gatsby-link'\nimport React from 'react'\n\nimport { LocaleLink, LocaleLinkProps } from './LocaleLink'\n\nexport interface ButtonLinkProps extends ButtonProps, Partial<Pick<LocaleLinkProps, 'to' | 'activeClassName'>> {\n  href?: string\n  localized?: boolean\n}\n\nexport function ButtonLink(props: ButtonLinkProps) {\n  const { localized, ...rest } = props\n\n  const component = (props.to && localized && LocaleLink) || (props.to && GatsbyLink) || 'a'\n\n  return <Button component={component} {...rest} />\n}\n\nButtonLink.defaultProps = {\n  localized: true,\n}\n","import { keyframes } from '@emotion/core'\nimport { Cell, Grid, HFlow, Icon, Text, TextProps, Theme, useStyles, VFlow } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React from 'react'\n\nimport { ButtonLink } from '../components/ButtonLink'\nimport { PageLayout } from '../components/PageLayout'\n\nexport default () => {\n  const { classes } = useStyles(createStyles)\n  const intl = useIntl()\n\n  return (\n    <PageLayout container={false}>\n      <div className={classes.wrapper}>\n        <div className={classes.container}>\n          <h1 className={classes.title}>\n            <AnimatedTitle>bold</AnimatedTitle> <span style={{ display: 'inline-block' }}>design system</span>\n          </h1>\n\n          <hr className={classes.divider} />\n\n          <VFlow vSpacing={3}>\n            <VFlow>\n              <h2 className={classes.subtitle}>{intl.formatMessage({ id: 'home-welcome' })}</h2>\n\n              <ButtonLink\n                to='/getting-started'\n                kind='primary'\n                skin='outline'\n                size='medium'\n                style={{ textDecoration: 'none' }}\n              >\n                <Icon icon='rocket' style={{ marginRight: '0.5rem' }} />\n                {intl.formatMessage({ id: 'home-getting-started' })}\n              </ButtonLink>\n            </VFlow>\n\n            <Grid wrap>\n              <Cell xs={12} md={4}>\n                <HFlow alignItems='center' hSpacing={0.5}>\n                  <Icon icon='arrowRight' fill='primary' />\n                  <h3 className={classes.infoTitle}>{intl.formatMessage({ id: 'home-aria-title' })}</h3>\n                </HFlow>\n                <Text component='p' style={classes.info}>\n                  {intl.formatMessage({ id: 'home-aria-description' })}\n                </Text>\n              </Cell>\n              <Cell xs={12} md={4}>\n                <HFlow alignItems='center' hSpacing={0.5}>\n                  <Icon icon='arrowRight' fill='primary' />\n                  <h3 className={classes.infoTitle}>{intl.formatMessage({ id: 'home-opensource-title' })}</h3>\n                </HFlow>\n                <Text component='p' style={classes.info}>\n                  {intl.formatMessage({ id: 'home-opensource-description' })}\n                </Text>\n              </Cell>\n              <Cell xs={12} md={4}>\n                <HFlow alignItems='center' hSpacing={0.5}>\n                  <Icon icon='arrowRight' fill='primary' />\n                  <h3 className={classes.infoTitle}>{intl.formatMessage({ id: 'home-customizable-title' })}</h3>\n                </HFlow>\n                <Text component='p' style={classes.info}>\n                  {intl.formatMessage({ id: 'home-customizable-description' })}\n                </Text>\n              </Cell>\n            </Grid>\n          </VFlow>\n        </div>\n      </div>\n    </PageLayout>\n  )\n}\n\nfunction AnimatedTitle(props: TextProps) {\n  const shine = keyframes({\n    to: {\n      backgroundPosition: '200% center',\n    },\n  })\n  const { classes } = useStyles(createStyles, shine)\n\n  return <Text style={classes.animatedTitle} {...props} />\n}\n\nconst createStyles = (theme: Theme, shine = '') => ({\n  wrapper: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  } as React.CSSProperties,\n  container: {\n    padding: '48px 80px',\n    maxWidth: 1056,\n    [theme.breakpoints.down('sm')]: {\n      padding: 40,\n    },\n  } as React.CSSProperties,\n  title: {\n    fontWeight: 'normal',\n    fontSize: 56,\n    lineHeight: '108px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 40,\n      lineHeight: '72px',\n    },\n  } as React.CSSProperties,\n  subtitle: {\n    fontSize: 24,\n  } as React.CSSProperties,\n  animatedTitle: {\n    fontSize: 132,\n    lineHeight: 1,\n    fontWeight: 'bold',\n    background: 'linear-gradient(80deg, #007AF0 20%, #00B5FF 40%, #00D2F4 60%, #007AF0 80%)',\n    backgroundClip: 'text',\n    textFillColor: 'transparent',\n    WebkitTextFillColor: 'transparent',\n    WebkitBackgroundClip: 'text',\n    backgroundSize: '200% auto',\n    animation: `${shine} 2s linear infinite`,\n  } as React.CSSProperties,\n  divider: {\n    width: 100,\n    marginBottom: '4rem',\n    marginTop: '2rem',\n  },\n  info: {\n    marginLeft: 32,\n    marginTop: 8,\n    fontSize: '1rem',\n  },\n  infoTitle: {\n    fontSize: '1.5rem',\n  },\n})\n"],"sourceRoot":""}
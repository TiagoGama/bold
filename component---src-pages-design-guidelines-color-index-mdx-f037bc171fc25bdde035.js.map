{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/components/Pallete.tsx","webpack:///./src/components/PalleteList.tsx","webpack:///./src/pages/design-guidelines/color/index.mdx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","Pallete","props","title","pallete","useStyles","createStyles","classes","css","keys","Object","map","k","parseInt","substr","sort","a","b","className","box","item","style","background","c40","color","gray","c100","shade","hex","key","c20","theme","display","width","fontSize","typography","sizes","text","fontWeight","justifyContent","padding","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","PalleteList","intl","useIntl","wrap","entries","colors","name","formatMessage","id","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","TabLinks","items","href","isMDXComponent","isActive","location","pathname","locale","tabs","component","LocaleLink","to","active","marginTop","marginBottom","boxShadow"],"mappings":"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","file":"component---src-pages-design-guidelines-color-index-mdx-f037bc171fc25bdde035.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import { Theme, useStyles } from 'bold-ui'\nimport { ColorScale, gray } from 'bold-ui/styles/colors'\nimport React from 'react'\n\nexport interface PalletePros {\n  title: string\n  pallete: ColorScale\n}\n\nexport function Pallete(props: PalletePros) {\n  const { title, pallete } = props\n  const { classes, css } = useStyles(createStyles)\n\n  const keys: number[] = Object.keys(pallete)\n    .map(k => parseInt(k.substr(1), 10))\n    .sort((a, b) => (a < b ? 1 : -1))\n\n  return (\n    <div className={classes.box}>\n      <div className={css(classes.item, classes.title)} style={{ background: pallete.c40, color: gray.c100 }}>\n        {title}\n      </div>\n      <div className={classes.item} style={{ background: pallete.c40, color: gray.c100 }}>\n        <span className={classes.shade}>40</span>\n        <span className={classes.hex}>{pallete.c40}</span>\n      </div>\n      {keys.map(key => (\n        <div\n          key={key}\n          className={classes.item}\n          style={{\n            background: (pallete as any)['c' + key],\n            color: key <= 60 ? gray.c100 : gray.c20,\n          }}\n        >\n          <span className={classes.shade}>{key}</span>\n          <span className={classes.hex}>{(pallete as any)['c' + key]}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  box: {\n    display: 'inline-block',\n    width: 240,\n    fontSize: theme.typography.sizes.text,\n  } as React.CSSProperties,\n  title: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  item: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '0.75rem 1rem',\n    '&:first-of-type': {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4,\n    },\n  } as React.CSSProperties,\n  shade: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  hex: {} as React.CSSProperties,\n})\n","import { Cell, Grid } from 'bold-ui'\nimport * as colors from 'bold-ui/styles/colors'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React from 'react'\n\nimport { Pallete } from './Pallete'\n\nexport const PalleteList = () => {\n  const intl = useIntl()\n  return (\n    <>\n      <Grid justifyContent='flex-start' wrap>\n        {Object.entries(colors).map(([name, pallete]) => (\n          <Cell key={name}>\n            <Pallete title={intl.formatMessage({ id: `color-name-${name}` })} pallete={pallete} />\n          </Cell>\n        ))}\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/calistro/projetos/bold/site/src/components/mdx/MDXPageLayout\";\nimport { PalleteList } from '../../../components/PalleteList';\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"colors\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Colors`}</h1>\n    <TabLinks items={[{\n      title: 'Pallete',\n      href: '/design-guidelines/color'\n    }, {\n      title: 'Usage',\n      href: '/design-guidelines/color/usage'\n    }]} mdxType=\"TabLinks\" />\n    <p>{`In Bold, colors are used to express states of interactive components, status, and emphasize visual and textual content. All palettes were built according to accessibility standards, fulfilling the minimum contrast of interactive elements and text with the background. The palettes were also designed thematically, and it maintains the optimum contrast of all components, as well as works in reverse, in dark mode.`}</p>\n    <PalleteList mdxType=\"PalleteList\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}
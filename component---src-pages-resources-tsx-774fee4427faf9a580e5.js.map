{"version":3,"sources":["webpack:///./src/components/ButtonLink.tsx","webpack:///./src/pages/resources.tsx"],"names":["ButtonLink","props","localized","rest","component","to","LocaleLink","GatsbyLink","defaultProps","Resources","intl","useIntl","formatMessage","id","fontSize","width","src","alt","vSpacing","fontWeight","href","kind","skin","size","onClick","ga","eventCategory","eventAction","icon","style","marginRight","target"],"mappings":"sPAWO,SAASA,EAAWC,GAAwB,IACzCC,EAAuBD,EAAvBC,UAAcC,E,oIAD2B,CAClBF,EADkB,eAG3CG,EAAaH,EAAMI,IAAMH,GAAaI,KAAgBL,EAAMI,IAAME,KAAe,IAEvF,OAAO,kBAAC,IAAD,eAAQH,UAAWA,GAAeD,IAG3CH,EAAWQ,aAAe,CACxBN,WAAW,I,kCCpBb,oIAQe,SAASO,IACtB,IAAMC,EAAOC,oBAsBb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKD,EAAKE,cAAc,CAAEC,GAAI,qBAC9B,kBAAC,IAAD,CAAMT,UAAU,IAAIU,SAAU,GAC3BJ,EAAKE,cAAc,CAAEC,GAAI,2BAG5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKE,MAAO,GAAIC,IAAI,qBAAqBC,IAAI,iBAE/C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,SAAU,IACf,6BACE,kBAAC,IAAD,CAAMd,UAAU,IAAIe,WAAW,OAAOL,SAAU,GAAhD,mBAGA,kBAAC,IAAD,CAAMV,UAAU,IAAIU,SAAU,GAC3BJ,EAAKE,cAAc,CAAEC,GAAI,mCAI9B,kBAAC,IAAD,CACEO,KAAK,mBACLC,KAAK,UACLC,KAAK,UACLC,KAAK,QACLC,QAhDY,WACxBC,YAAG,OAAQ,QAAS,CAClBC,cAAe,WACfC,YAAa,aA+CH,kBAAC,IAAD,CAAMC,KAAK,WAAWC,MAAO,CAAEC,YAAa,YAC3CpB,EAAKE,cAAc,CAAEC,GAAI,kCAMlC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKE,MAAO,GAAIC,IAAI,mBAAmBC,IAAI,iBAE7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,SAAU,IACf,6BACE,kBAAC,IAAD,CAAMd,UAAU,IAAIe,WAAW,OAAOL,SAAU,GAAhD,mBAGA,kBAAC,IAAD,CAAMV,UAAU,IAAIU,SAAU,GAC3BJ,EAAKE,cAAc,CAAEC,GAAI,kCAI9B,kBAAC,IAAD,CACEO,KAAK,yEACLN,SAAU,EACViB,OAAO,SACPP,QArEW,WACvBC,YAAG,OAAQ,QAAS,CAClBC,cAAe,WACfC,YAAa,YAoEFjB,EAAKE,cAAc,CAAEC,GAAI,iCAKlC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,SAAU,IACf,kBAAC,IAAD,CAAMd,UAAU,IAAIe,WAAW,OAAOL,SAAU,GAAhD,uBAGA,kBAAC,IAAD,CAAMV,UAAU,IAAIU,SAAU,GAC3BJ,EAAKE,cAAc,CAAEC,GAAI,sCAE5B,kBAAC,IAAD,CACEO,KAAK,kCACLC,KAAK,UACLC,KAAK,UACLC,KAAK,QACLC,QApFgB,WAC5BC,YAAG,OAAQ,QAAS,CAClBC,cAAe,WACfC,YAAa,iBAmFH,kBAAC,IAAD,CAAMC,KAAK,WAAWC,MAAO,CAAEC,YAAa,YAC3CpB,EAAKE,cAAc,CAAEC,GAAI","file":"component---src-pages-resources-tsx-774fee4427faf9a580e5.js","sourcesContent":["import { Button, ButtonProps } from 'bold-ui'\nimport GatsbyLink from 'gatsby-link'\nimport React from 'react'\n\nimport { LocaleLink, LocaleLinkProps } from './LocaleLink'\n\nexport interface ButtonLinkProps extends ButtonProps, Partial<Pick<LocaleLinkProps, 'to' | 'activeClassName'>> {\n  href?: string\n  localized?: boolean\n}\n\nexport function ButtonLink(props: ButtonLinkProps) {\n  const { localized, ...rest } = props\n\n  const component = (props.to && localized && LocaleLink) || (props.to && GatsbyLink) || 'a'\n\n  return <Button component={component} {...rest} />\n}\n\nButtonLink.defaultProps = {\n  localized: true,\n}\n","import { Cell, Grid, Icon, Link, Text, VFlow } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React from 'react'\n\nimport { ButtonLink } from '../components/ButtonLink'\nimport { ga } from '../components/ga'\nimport { PageLayout } from '../components/PageLayout'\n\nexport default function Resources() {\n  const intl = useIntl()\n\n  const handleClickSketch = () => {\n    ga('send', 'event', {\n      eventCategory: 'Download',\n      eventAction: `Sketch`,\n    })\n  }\n\n  const handleClickFigma = () => {\n    ga('send', 'event', {\n      eventCategory: 'Download',\n      eventAction: `Figma`,\n    })\n  }\n  const handleClickSketchData = () => {\n    ga('send', 'event', {\n      eventCategory: 'Download',\n      eventAction: `SketchData`,\n    })\n  }\n\n  return (\n    <PageLayout>\n      <VFlow>\n        <h1>{intl.formatMessage({ id: 'resources-title' })}</h1>\n        <Text component='p' fontSize={1}>\n          {intl.formatMessage({ id: 'resources-description' })}\n        </Text>\n\n        <Grid>\n          <Cell>\n            <img width={96} src='/image/diamond.svg' alt='Sketch icon' />\n          </Cell>\n          <Cell>\n            <VFlow vSpacing={0.5}>\n              <div>\n                <Text component='p' fontWeight='bold' fontSize={1}>\n                  Bold Design Kit\n                </Text>\n                <Text component='p' fontSize={1}>\n                  {intl.formatMessage({ id: 'resources-sketch-description' })}\n                </Text>\n              </div>\n\n              <ButtonLink\n                href='/Bold-1.0.sketch'\n                kind='primary'\n                skin='outline'\n                size='small'\n                onClick={handleClickSketch}\n              >\n                <Icon icon='download' style={{ marginRight: '0.5rem' }} />\n                {intl.formatMessage({ id: 'resources-sketch-download' })}\n              </ButtonLink>\n            </VFlow>\n          </Cell>\n        </Grid>\n\n        <Grid>\n          <Cell>\n            <img width={96} src='/image/figma.svg' alt='Sketch icon' />\n          </Cell>\n          <Cell>\n            <VFlow vSpacing={0.5}>\n              <div>\n                <Text component='p' fontWeight='bold' fontSize={1}>\n                  Bold Design Kit\n                </Text>\n                <Text component='p' fontSize={1}>\n                  {intl.formatMessage({ id: 'resources-figma-description' })}\n                </Text>\n              </div>\n\n              <Link\n                href='https://www.figma.com/file/TE9FUDtlgVQ4FWlAPtTagxQU/Bold-Design-System'\n                fontSize={1}\n                target='_blank'\n                onClick={handleClickFigma}\n              >\n                {intl.formatMessage({ id: 'resources-figma-download' })}\n              </Link>\n            </VFlow>\n          </Cell>\n        </Grid>\n        <Grid>\n          <Cell>\n            <VFlow vSpacing={0.5}>\n              <Text component='p' fontWeight='bold' fontSize={1}>\n                Sketch Data Suplies\n              </Text>\n              <Text component='p' fontSize={1}>\n                {intl.formatMessage({ id: 'resources-sketchdata-description' })}\n              </Text>\n              <ButtonLink\n                href='/Sketch-Data-Suplies(PT-BR).zip'\n                kind='primary'\n                skin='outline'\n                size='small'\n                onClick={handleClickSketchData}\n              >\n                <Icon icon='download' style={{ marginRight: '0.5rem' }} />\n                {intl.formatMessage({ id: 'resources-sketchdata-download' })}\n              </ButtonLink>\n            </VFlow>\n          </Cell>\n        </Grid>\n      </VFlow>\n    </PageLayout>\n  )\n}\n"],"sourceRoot":""}